#compdef pass-otp

_pass_list() {
  local passwords
  passwords=($(find "$PASS_STORE/otp/" -type f -not -path "*/.git/*" 2>/dev/null | awk -F "$PASS_STORE/otp/" '{print $2}' | sed 's/\.age$//'))
  _describe 'stored passwords' passwords
}

_pass_otp_commands() {
  local -a commands
  commands=(
    "add:Add a new OTP Key"
    "new:Alias for add"
    "gen:Alias for add"
    "generate:Alias for add"
    "close:Remove cached private key"
    "cp:Copy OTP to clipboard"
    "help:Display help message"
    "copy:Alias for cp"
    "clip:Alias for cp"
    "custom:Specify a custom dialog"
    "edit:Edit OTP Key"
    "find:Search OTPs and display as a tree"
    "import:Import OTPs from passwordstore"
    "ls:List all stored OTPs in a tree format"
    "list:Alias for ls"
    "out:Print OTP to stdout"
    "output:Alias for out"
    "stdout:Alias for out"
    "rm:Remove an OTP entry"
    "remove:Alias for rm"
    "version:Display the current version number"
  )
  _describe -t commands 'command' commands "$@"
}

_arguments \
  '(-)-[Show available options]' \
  '(-h)--help[Display help message]' \
  '(-a)--entropy-amplification[Enable Entropy Amplification]' \
  '(-i)--iterations[Define iterations for Entropy Amplification]:iterations:' \
  '(-s)--salt[Define salt for Entropy Amplification]:salt:' \
  '(-c)--clipboard[Copy password to clipboard after password generation or removal]' \
  '(-d)--dialog[Choose a dialog]:dialog:' \
  '(-e)--extra-command[Run extra command post clipboard clearance]' \
  '(-f)--force[Bypass confirmation dialogs]' \
  '(-n)--notifications[Enable notifications]' \
  '(-z)--no-cache[Do not keep private key cached]' \
  '1:command:->command' \
  '*::arguments:->args'

case $state in
command)
  _pass_otp_commands
  ;;
args)
  case $words[1] in
  cp | copy | clip | out | output | stdout | rm | remove | edit)
    _pass_list
    ;;
  esac
  ;;
esac
